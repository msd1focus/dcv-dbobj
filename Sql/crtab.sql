-- Generated by Oracle SQL Developer Data Modeler 18.1.0.082.1035
--   at:        2019-03-19 21:25:19 ICT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE dcv.dcv_files CASCADE CONSTRAINTS;

DROP TABLE dcv.dcv_request CASCADE CONSTRAINTS;

DROP TABLE dcv.holiday CASCADE CONSTRAINTS;

DROP TABLE dcv.pcline_break CASCADE CONSTRAINTS;

DROP TABLE dcv.request_dtl CASCADE CONSTRAINTS;

DROP TABLE dcv.sec_role CASCADE CONSTRAINTS;

DROP TABLE dcv.sec_user CASCADE CONSTRAINTS;

DROP TABLE dcv.wf_node CASCADE CONSTRAINTS;

DROP TABLE dcv.wf_node_option CASCADE CONSTRAINTS;

DROP TABLE dcv.wf_task CASCADE CONSTRAINTS;

DROP TABLE dcv.wf_task_multiple CASCADE CONSTRAINTS;

CREATE TABLE dcv.dcv_files (
    id                   INTEGER NOT NULL,
    file_name            VARCHAR2(500 CHAR) NOT NULL,
    doc_type             VARCHAR2(15 CHAR),
    file_loc             VARCHAR2(500 CHAR),
    upload_time          DATE,
    request_hdr_req_id   INTEGER NOT NULL,
    keterangan           VARCHAR2(500)
);

COMMENT ON COLUMN dcv.dcv_files.doc_type IS
    'beritaacara, rekapfaktur, kwitansi, fakturpajak, buktipotong, fakturpengganti, noresi';

ALTER TABLE dcv.dcv_files ADD CONSTRAINT file_pendukung_pk PRIMARY KEY ( id );

CREATE TABLE dcv.dcv_request (
    req_id              INTEGER NOT NULL,
    customer            VARCHAR2(25 CHAR) NOT NULL,
    company             VARCHAR2(3 CHAR) NOT NULL,
    no_pc               VARCHAR2(100 CHAR) NOT NULL,
    key_pc              VARCHAR2(14 CHAR) NOT NULL,
    periode_dcv_start   DATE NOT NULL,
    periode_dcv_end     DATE,
    pc_kategori         VARCHAR2(5),
    pc_tipe             VARCHAR2(50),
    periode_pc_start    DATE,
    periode_pc_end      DATE,
    no_dcv              VARCHAR2(15 CHAR),
    prod_type           VARCHAR2(15),
    req_value           NUMBER DEFAULT 0,
    apr_value           NUMBER DEFAULT 0,
    ppn                 VARCHAR2(5 CHAR),
    no_faktur           VARCHAR2(30 CHAR),
    req_time            DATE,
    region_code         VARCHAR2(20 CHAR),
    region_desc         VARCHAR2(30 CHAR),
    area_code           VARCHAR2(20 CHAR),
    area_desc           VARCHAR2(400 CHAR),
    loc_code            VARCHAR2(20 CHAR),
    loc_desc            VARCHAR2(300 CHAR),
    ketr_kwitansi       VARCHAR2(1000 CHAR),
    file_complete       VARCHAR2(1 CHAR),
    pc_adds             VARCHAR2(100),
    no_po               VARCHAR2(30 CHAR),
    dcv_status          VARCHAR2(30),
    notes               VARCHAR2(200 CHAR),
    modified_dt         DATE,
    modified_by         VARCHAR2(50 CHAR)
);

COMMENT ON COLUMN dcv.dcv_request.ppn IS
    'flag ada ppn atau tidak (Y/T)';

ALTER TABLE dcv.dcv_request ADD CONSTRAINT request_hdr_pk PRIMARY KEY ( req_id );

CREATE TABLE dcv.holiday (
    id            INTEGER NOT NULL,
    start_dt      DATE,
    end_dt        DATE,
    description   VARCHAR2(50 CHAR)
);

ALTER TABLE dcv.holiday ADD CONSTRAINT holiday_pk PRIMARY KEY ( id );

CREATE TABLE dcv.pcline_break (
    id               INTEGER NOT NULL,
    request_dtl_id   INTEGER NOT NULL,
    prod_code        VARCHAR2(30),
    prod_name        VARCHAR2(100),
    qty              INTEGER,
    uom              VARCHAR2(15 CHAR),
    nilai_satuan     NUMBER DEFAULT 0,
    value_total      NUMBER DEFAULT 0,
    mf_ot            VARCHAR2(2 CHAR),
    conversion_uom   NUMBER,
    notes            VARCHAR2(100),
    modified_dt      DATE,
    modified_by      VARCHAR2(50 CHAR)
);

ALTER TABLE dcv.pcline_break ADD CONSTRAINT req_line_breakdown_pk PRIMARY KEY ( id );

CREATE TABLE dcv.request_dtl (
    id                    INTEGER NOT NULL,
    request_hdr_id        INTEGER NOT NULL,
    pc_lineno             VARCHAR2(100 CHAR),
    prod_class            VARCHAR2(40 CHAR),
    prod_class_desc       VARCHAR2(100 CHAR),
    prod_brand            VARCHAR2(40 CHAR),
    prod_brand_desc       VARCHAR2(100 CHAR),
    prod_ext              VARCHAR2(40 CHAR),
    prod_ext_desc         VARCHAR2(100 CHAR),
    prod_packaging        VARCHAR2(40 CHAR),
    prod_packaging_desc   VARCHAR2(100 CHAR),
    prod_variant          VARCHAR2(40 CHAR),
    prod_variant_desc     VARCHAR2(100 CHAR),
    prod_item             VARCHAR2(40 CHAR),
    prod_item_desc        VARCHAR2(100 CHAR),
    request_qty           INTEGER,
    request_uom           VARCHAR2(15 CHAR),
    request_val_exc       NUMBER DEFAULT 0,
    approve_val_exc       NUMBER DEFAULT 0,
    ppn_code              VARCHAR2(10 CHAR),
    ppn_val               NUMBER,
    pph_code              CHAR(10 CHAR),
    pph_val               NUMBER DEFAULT 0,
    mf_val                NUMBER,
    ot_val                NUMBER,
    total_val_inc         NUMBER,
    selisih               NUMBER,
    notes                 VARCHAR2(100 CHAR),
    modified_dt           DATE,
    modified_by           VARCHAR2(50 CHAR)
);

ALTER TABLE dcv.request_dtl ADD CONSTRAINT request_dtl_pk PRIMARY KEY ( id );

CREATE TABLE dcv.sec_role (
    id            INTEGER NOT NULL,
    role_code     VARCHAR2(15 CHAR) NOT NULL,
    role_desc     VARCHAR2(50 CHAR),
    sla1          INTEGER,
    sla2          INTEGER,
    role_level    INTEGER,
    role_parent   INTEGER
);

COMMENT ON COLUMN dcv.sec_role.sla1 IS
    'sla1 : target berapa hari proses harus selesai diproses';

COMMENT ON COLUMN dcv.sec_role.sla2 IS
    'cadangan';

COMMENT ON COLUMN dcv.sec_role.role_level IS
    'jika role ada leveling, mis. member - supervisor - mgr';

ALTER TABLE dcv.sec_role ADD CONSTRAINT role_pk PRIMARY KEY ( id );

CREATE TABLE dcv.sec_user (
    id           INTEGER NOT NULL,
    username     VARCHAR2(100 CHAR) NOT NULL,
    passwd       VARCHAR2(100 CHAR),
    role_id      INTEGER NOT NULL,
    rank         VARCHAR2(15 CHAR),
    sp_assign1   VARCHAR2(50 CHAR),
    sp_assign2   VARCHAR2(50 CHAR),
    spv_id       INTEGER
);

COMMENT ON COLUMN dcv.sec_user.rank IS
    'Superviser, member';

COMMENT ON COLUMN dcv.sec_user.sp_assign1 IS
    'mis: 
untuk TC: food/non food';

ALTER TABLE dcv.sec_user ADD CONSTRAINT user_pk PRIMARY KEY ( id );

CREATE TABLE dcv.wf_node (
    nodecode    VARCHAR2(10 CHAR) NOT NULL,
    node_desc   VARCHAR2(50 CHAR),
    nodetype    VARCHAR2(30 CHAR) NOT NULL,
    role_id     INTEGER,
    functions   VARCHAR2(100 CHAR)
);

COMMENT ON COLUMN dcv.wf_node.nodetype IS
    'normal: decission
split: jadi banyak
merge: jadi satu
autocheck: scheduled check
serahterima dok
end';

COMMENT ON COLUMN dcv.wf_node.functions IS
    'nama db function unt di-execute';

ALTER TABLE dcv.wf_node ADD CONSTRAINT node_pk PRIMARY KEY ( nodecode );

CREATE TABLE dcv.wf_node_option (
    id            INTEGER NOT NULL,
    node_id       VARCHAR2(10 CHAR) NOT NULL,
    pilihan       INTEGER NOT NULL,
    description   VARCHAR2(10),
    refnode       VARCHAR2(10 CHAR) NOT NULL
);

COMMENT ON COLUMN dcv.wf_node_option.pilihan IS
    '1. Approve1
2. Approve2
3. Return/Back
4. Terminate/Cancel';

ALTER TABLE dcv.wf_node_option ADD CONSTRAINT node_option_pk PRIMARY KEY ( id );

CREATE TABLE dcv.wf_task (
    id               INTEGER NOT NULL,
    key              VARCHAR2(20 CHAR) NOT NULL,
    task_type        VARCHAR2(10 CHAR),
    "task_status "   VARCHAR2(10 CHAR),
    nodecode         VARCHAR2(10 CHAR) NOT NULL,
    assign_time      DATE,
    prev_task        INTEGER,
    decision         INTEGER,
    job              VARCHAR2(50 CHAR),
    pesan            VARCHAR2(250 CHAR),
    process_time     DATE,
    process_by       INTEGER NOT NULL
);

COMMENT ON COLUMN dcv.wf_task.task_type IS
    'humantask, merge, auto sched';

COMMENT ON COLUMN dcv.wf_task."task_status " IS
    'done, waiting';

ALTER TABLE dcv.wf_task ADD CONSTRAINT task_pk PRIMARY KEY ( id );

CREATE TABLE dcv.wf_task_multiple (
    id           INTEGER NOT NULL,
    task         INTEGER NOT NULL,
    prev_task    INTEGER,
    complete     VARCHAR2(3 CHAR),
    process_dt   DATE
);

ALTER TABLE dcv.wf_task_multiple ADD CONSTRAINT task_multiple_pk PRIMARY KEY ( id );

ALTER TABLE dcv.dcv_files
    ADD CONSTRAINT file_pendukung_request_hdr_fk FOREIGN KEY ( request_hdr_req_id )
        REFERENCES dcv.dcv_request ( req_id );

ALTER TABLE dcv.wf_node
    ADD CONSTRAINT node_role_fk FOREIGN KEY ( role_id )
        REFERENCES dcv.sec_role ( id );

ALTER TABLE dcv.pcline_break
    ADD CONSTRAINT req_line_breakdown_fk FOREIGN KEY ( request_dtl_id )
        REFERENCES dcv.request_dtl ( id );

ALTER TABLE dcv.request_dtl
    ADD CONSTRAINT request_dtl_request_hdr_fk FOREIGN KEY ( request_hdr_id )
        REFERENCES dcv.dcv_request ( req_id );

ALTER TABLE dcv.wf_task_multiple
    ADD CONSTRAINT task_multiple_task_fk FOREIGN KEY ( task )
        REFERENCES dcv.wf_task ( id );

ALTER TABLE dcv.wf_task
    ADD CONSTRAINT task_user_fk FOREIGN KEY ( process_by )
        REFERENCES dcv.sec_user ( id );

ALTER TABLE dcv.sec_user
    ADD CONSTRAINT user_role_fk FOREIGN KEY ( role_id )
        REFERENCES dcv.sec_role ( id )
            ON DELETE CASCADE;

ALTER TABLE dcv.wf_node_option
    ADD CONSTRAINT wf_node_option_wf_node_fk FOREIGN KEY ( node_id )
        REFERENCES dcv.wf_node ( nodecode );

ALTER TABLE dcv.wf_node_option
    ADD CONSTRAINT wf_node_option_wf_node_fkv1 FOREIGN KEY ( refnode )
        REFERENCES dcv.wf_node ( nodecode );

ALTER TABLE dcv.wf_task
    ADD CONSTRAINT wf_task_wf_node_fk FOREIGN KEY ( nodecode )
        REFERENCES dcv.wf_node ( nodecode );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
